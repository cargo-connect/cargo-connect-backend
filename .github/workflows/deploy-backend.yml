name: Deploy Backend to AWS Lambda

on:
  push:
    branches:
      - main # Or your primary deployment branch

permissions:
  id-token: write # Required for OIDC authentication
  contents: read  # Required to check out the code

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev # Optional: Link to a GitHub environment for protection rules/secrets

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }} # Provided via GitHub secrets
          aws-region: ${{ secrets.AWS_REGION }}           # Provided via GitHub secrets
          role-session-name: GitHubActionsBackendDeploy

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }} # Provided via GitHub secrets
          IMAGE_TAG: ${{ github.sha }} # Use commit SHA as the image tag
        run: |
          # Use -f to specify the Dockerfile for Lambda deployment
          docker build -f Dockerfile.lambda -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Update Lambda Function
        env:
          LAMBDA_FUNCTION_NAME: ${{ secrets.LAMBDA_FUNCTION_NAME }} # Provided via GitHub secrets
          IMAGE_URI: ${{ steps.build-image.outputs.image }}
        run: |
          echo "Updating Lambda function $LAMBDA_FUNCTION_NAME with image $IMAGE_URI"
          aws lambda update-function-code \
            --function-name $LAMBDA_FUNCTION_NAME \
            --image-uri $IMAGE_URI \
            --region ${{ secrets.AWS_REGION }}
